version: '3.2'

services:

  nginx:
    build: ./nginx
    restart: always
    depends_on:
      - app
    ports:
      - 8011:8011
    expose:
      - "8011"
    networks:
      - nginx-network

  app:
    tty: true
    build:
      context: .
      args:
        requirements: requirements/development.txt
    container_name: news_aggregator
    environment:
      # use in code
      - DEBUG=True
      - SETTINGS_FILE=api.dev.yml
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
    restart: always
    volumes:
      - .:/app:delegated
    depends_on:
      - postgres
      - redis
    ports:
      - 8010:8010
    entrypoint: "gunicorn news_aggregator.app:app -b 0.0.0.0:8010 --worker-class aiohttp.GunicornUVLoopWebWorker"
    networks:
      - nginx-network
      - redis-network
      - postgres-network

  postgres:
      image: postgres:10
      container_name: news_aggregator_postgres
      environment:
          - POSTGRES_USER=postgres
          - POSTGRES_PASSWORD=postgres
          - POSTGRES_DB=postgres
      ports:
          - 5432
      networks:
        - postgres-network

  redis:
    image: redis:4
    ports:
        - 6379
    networks:
      - redis-network


networks:
    redis-network:
      driver: bridge
    postgres-network:
      driver: bridge
    nginx-network:
      driver: bridge